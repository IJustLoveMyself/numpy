#********coding:utf-8**********
import numpy as np

#切片
#用python的内置slice函数来构造一个 Python slice对象，将slice对象被传递给数组来提取数组的一部分
a = np.arange(10)
print a #[0 1 2 3 4 5 6 7 8 9]
s = slice(3,9,2)  #slice(start,stop,step)
print a[s] #[3 5 7]
print a[3:9:2] #[3 5 7] a[start:stop:step]

#如果只输入一个参数，则将返回与索引对应的单个项目。
# 如果使用a:，则从该索引向后的所有项目将被提取。
# 如果使用两个参数(以:分隔)，则对两个索引(不包括停止索引)之间的元素以默认步骤进行切片。
a = np.array([[1,2,3],[4,5,6],[7,8,9]])
print a[1]
#[4 5 6] 第二行
print a[1:]
#[[4 5 6]  第二行到最后一行,任意列
# [7 8 9]]
print a[1,:]
#[4 5 6] 第二行，任意列
print a[0:2]
#[[1 2 3] 第一行到第三行，不包括第三行
# [4 5 6]]
print a[...,1] #[2 5 8] 任意行，第二列
print a[:,1]#[2 5 8]  省略号和冒号的作用相同
print a[:,1:]
#[[2 3]
# [5 6]
# [8 9]] 任意行，从第二列到最后一列
x = np.array([[1,2],[3,4],[5,6]])
print x[[0,1,2],[0,1,0]]
# [1 4 5]
# 相当于查找（0,0），（1,1），（2,0）处的值
x = np.array([[1,2,3],[3,4,5],[6,7,8],[8,9,10]])
print x[[[0,0],[2,3]],[[0,2],[1,2]]]
# [[ 1  3]
#  [ 7 10]]
# 相当于查找（0,0(0,2)(2,1)(3,2)

#过滤
x = np.array([[1,2,3],[4,6,6],[7,8,9],[10,11,12]])
print x[x>5]#[ 6  6  7  8  9 10 11 12]
x = np.array([np.nan,  1,2,np.nan,3,4,5])
print x[np.isnan(x)==False]#[ 1.  2.  3.  4.  5.]
x = np.array([1,  2+6j,  5,  3.5+5j])
print x[np.iscomplex(x)]#[ 2.0+6.j  3.5+5.j]